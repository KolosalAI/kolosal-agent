# Kolosal Agent System Environment Variables
# Copy this file to .env and customize the values for your environment
# NOTE: Never commit .env files with real credentials to version control!

# =============================================================================
# API KEYS AND SECRETS (REQUIRED FOR PRODUCTION)
# =============================================================================

# Main API key for Kolosal Agent System authentication
# Set this when auth is enabled
KOLOSAL_API_KEY=

# API key for search services (SearXNG, Google, Bing, etc.)
# Required for internet search functionality
KOLOSAL_SEARCH_API_KEY=

# API key for Qdrant vector database
# Required when using Qdrant with authentication enabled
KOLOSAL_QDRANT_API_KEY=

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Host and port for the Kolosal Agent System server
KOLOSAL_HOST=127.0.0.1
KOLOSAL_PORT=8080

# Qdrant database connection
KOLOSAL_QDRANT_HOST=localhost
KOLOSAL_QDRANT_PORT=6333
KOLOSAL_QDRANT_COLLECTION=documents

# Search engine URL
KOLOSAL_SEARXNG_URL=https://searx.stream/

# =============================================================================
# FILE PATHS AND DIRECTORIES
# =============================================================================

# Base directory for AI models (LLM and embedding models)
# Models should be placed in this directory
KOLOSAL_MODEL_PATH=./models

# Directory containing inference engine libraries
# Platform-specific: typically ./build/Debug on Windows, ./build on Linux/macOS
KOLOSAL_ENGINE_PATH=./build/Debug

# Path to FAISS vector database index
KOLOSAL_FAISS_INDEX_PATH=./data/faiss_index

# General data directory for logs, indices, and temporary files
KOLOSAL_DATA_PATH=./data

# Configuration files directory
KOLOSAL_CONFIG_PATH=./config

# =============================================================================
# MODEL CONFIGURATION
# =============================================================================

# LLM Model settings
KOLOSAL_LLM_MODEL_ID=qwen2.5-0.5b
KOLOSAL_LLM_MODEL_FILE=qwen2.5-0.5b-instruct-q4_k_m.gguf
KOLOSAL_LLM_MODEL_NAME=qwen2.5-0.5b-instruct-q4_k_m

# Embedding Model settings
KOLOSAL_EMBEDDING_MODEL_ID=all-MiniLM-L6-v2-bf16-q4_k
KOLOSAL_EMBEDDING_MODEL_FILE=all-MiniLM-L6-v2-bf16-q4_k.gguf
KOLOSAL_EMBEDDING_MODEL_NAME=all-MiniLM-L6-v2-bf16-q4_k

# Model loading settings
KOLOSAL_LLM_PRELOAD=true
KOLOSAL_EMBEDDING_PRELOAD=true

# =============================================================================
# INFERENCE ENGINE CONFIGURATION
# =============================================================================

# Default inference engine
KOLOSAL_DEFAULT_ENGINE=llama-cpu
KOLOSAL_ENGINE_NAME=llama-cpu

# Platform-specific engine library file
# Windows: llama-cpu.dll, Linux/macOS: libllama-cpu.so
KOLOSAL_ENGINE_LIBRARY=llama-cpu.dll

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Vector database type: 'qdrant' or 'faiss'
KOLOSAL_VECTOR_DB=qdrant

# Retrieval model for document embeddings
KOLOSAL_RETRIEVAL_MODEL=all-MiniLM-L6-v2-bf16-q4_k

# Qdrant settings
KOLOSAL_QDRANT_ENABLED=true
KOLOSAL_QDRANT_TIMEOUT=30
KOLOSAL_QDRANT_MAX_CONN=10

# FAISS settings
KOLOSAL_FAISS_INDEX_TYPE=Flat
KOLOSAL_FAISS_DIMENSIONS=1536
KOLOSAL_FAISS_NORMALIZE=true

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Log level: DEBUG, INFO, WARN, ERROR
KOLOSAL_LOG_LEVEL=INFO

# Log file path (empty = log to console only)
KOLOSAL_LOG_FILE=

# Enable metrics collection
KOLOSAL_METRICS_ENABLED=true
KOLOSAL_HEALTH_CHECK=true

# =============================================================================
# SECURITY AND AUTHENTICATION
# =============================================================================

# Enable authentication (set to true for production)
KOLOSAL_ENABLE_AUTH=false
KOLOSAL_REQUIRE_API_KEY=false

# CORS settings (IMPORTANT: Configure specific origins for production)
KOLOSAL_ENABLE_CORS=true
# DO NOT use "*" in production - specify exact origins:
# KOLOSAL_CORS_ORIGIN_1=https://yourdomain.com
# KOLOSAL_CORS_ORIGIN_2=https://app.yourdomain.com
KOLOSAL_CORS_ORIGIN_1=

# Rate limiting (adjust based on your needs)
KOLOSAL_RATE_LIMIT_REQUESTS=100
KOLOSAL_RATE_LIMIT_WINDOW=60

# SECURITY NOTES:
# - Generate unique, strong API keys for production
# - Never use wildcard (*) CORS origins in production
# - Enable authentication for public deployments
# - Regularly rotate API keys
# - Use HTTPS in production environments

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Maximum concurrent requests
KOLOSAL_MAX_REQUESTS=100

# Request timeout in milliseconds
KOLOSAL_REQUEST_TIMEOUT=30000

# Memory and threading (auto-detect by default)
KOLOSAL_MAX_MEMORY=auto
KOLOSAL_CACHE_SIZE=auto
KOLOSAL_WORKER_THREADS=auto

# =============================================================================
# SEARCH CONFIGURATION
# =============================================================================

# Search engine settings
KOLOSAL_SEARCH_ENABLED=true
KOLOSAL_SEARCH_TIMEOUT=30
KOLOSAL_SEARCH_MAX_RESULTS=20
KOLOSAL_SEARCH_LANGUAGE=en
KOLOSAL_SEARCH_ENGINE=

# =============================================================================
# KOLOSAL SERVER CONFIGURATION
# =============================================================================

# Server startup and health settings
KOLOSAL_SERVER_AUTO_START=true
KOLOSAL_SERVER_STARTUP_TIMEOUT=60
KOLOSAL_SERVER_HEALTH_INTERVAL=10
KOLOSAL_SERVER_MAX_RETRIES=3

# Resource limits for the server
KOLOSAL_SERVER_MAX_MEMORY=1.5GB
KOLOSAL_SERVER_MAX_CPU=80

# Model preloading timeout
KOLOSAL_MODEL_PRELOAD_TIMEOUT=120

# =============================================================================
# PLATFORM-SPECIFIC NOTES
# =============================================================================

# Windows:
# - Use backslashes or forward slashes in paths
# - Engine library: llama-cpu.dll
# - Build path typically: ./build/Debug

# Linux/macOS:
# - Use forward slashes in paths  
# - Engine library: libllama-cpu.so
# - Build path typically: ./build

# Docker:
# - Use absolute paths: /app/models, /app/data
# - Set KOLOSAL_HOST=0.0.0.0 for external access
# - Mount volumes for persistent data

# =============================================================================
# EXAMPLE USAGE
# =============================================================================

# Development (local):
# KOLOSAL_LOG_LEVEL=DEBUG
# KOLOSAL_MODEL_PATH=./models
# KOLOSAL_ENGINE_PATH=./build/Debug

# Production (Linux server):
# KOLOSAL_API_KEY=your-production-api-key
# KOLOSAL_MODEL_PATH=/opt/kolosal/models
# KOLOSAL_ENGINE_PATH=/opt/kolosal/engines
# KOLOSAL_LOG_LEVEL=INFO
# KOLOSAL_HOST=0.0.0.0

# Docker:
# KOLOSAL_MODEL_PATH=/app/models
# KOLOSAL_DATA_PATH=/app/data
# KOLOSAL_HOST=0.0.0.0

# Conditional Workflow Configuration
# This demonstrates conditional execution based on step results and conditions

id: "conditional_processing_workflow"
name: "Conditional Processing Workflow"
description: "A workflow with conditional branches based on data analysis results"
type: "conditional"
created_by: "system"

global_context:
  input_data: "user_provided_data"
  quality_threshold: 0.75
  complexity_threshold: 0.8
  processing_mode: "adaptive"

settings:
  max_execution_time: 800
  max_concurrent_steps: 2
  auto_cleanup: true
  persist_state: true

error_handling:
  retry_on_failure: true
  max_retries: 2
  retry_delay_seconds: 3
  continue_on_error: true
  use_fallback_agent: false

steps:
  # Initial Assessment
  - id: "initial_assessment"
    name: "Initial Data Assessment"
    description: "Assess data quality and complexity"
    agent_id: "research_analyst"
    function: "analyze_data"
    parameters:
      data_source: "${global.input_data}"
      analysis_type: "initial_assessment"
      check_quality: true
      check_complexity: true
    timeout: 120
    max_retries: 3
    parallel_allowed: false

  # Conditional Step 1: High Quality Path
  - id: "high_quality_processing"
    name: "High Quality Data Processing"
    description: "Process high-quality data with advanced methods"
    agent_id: "research_analyst"
    function: "analyze_data"
    parameters:
      data_source: "${steps.initial_assessment.output}"
      analysis_type: "advanced"
      use_ml_models: true
      confidence_level: 0.95
    depends_on:
      - "initial_assessment"
    conditions:
      # Only run if data quality is above threshold
      expression: "steps.initial_assessment.output.quality_score >= global.quality_threshold"
    timeout: 300
    max_retries: 2
    parallel_allowed: false

  # Conditional Step 2: Low Quality Path
  - id: "low_quality_processing"
    name: "Low Quality Data Processing"
    description: "Process low-quality data with basic methods and cleaning"
    agent_id: "task_executor"
    function: "execute_task"
    parameters:
      task_definition:
        action: "clean_and_process"
        input: "${steps.initial_assessment.output}"
        cleaning_level: "aggressive"
        fallback_methods: true
    depends_on:
      - "initial_assessment"
    conditions:
      # Only run if data quality is below threshold
      expression: "steps.initial_assessment.output.quality_score < global.quality_threshold"
    timeout: 180
    max_retries: 3
    parallel_allowed: false

  # Conditional Step 3: Complex Data Handling
  - id: "complex_data_handling"
    name: "Complex Data Handling"
    description: "Special handling for complex data structures"
    agent_id: "research_analyst"
    function: "analyze_data"
    parameters:
      data_source: "${steps.high_quality_processing.output || steps.low_quality_processing.output}"
      analysis_type: "complex_structure_analysis"
      use_specialized_tools: true
    depends_on:
      - step: "high_quality_processing"
        condition: "completion"
        required: false
      - step: "low_quality_processing"  
        condition: "completion"
        required: false
    conditions:
      # Run if complexity is high AND at least one processing step completed
      expression: "steps.initial_assessment.output.complexity_score >= global.complexity_threshold"
    timeout: 240
    max_retries: 2
    parallel_allowed: false

  # Results Synthesis - Always runs
  - id: "synthesize_results"
    name: "Synthesize Results"
    description: "Synthesize all processing results"
    agent_id: "research_analyst"
    function: "synthesize_information"
    parameters:
      input_data:
        assessment: "${steps.initial_assessment.output}"
        high_quality: "${steps.high_quality_processing.output || null}"
        low_quality: "${steps.low_quality_processing.output || null}"
        complex: "${steps.complex_data_handling.output || null}"
      synthesis_method: "adaptive"
      include_metadata: true
    depends_on:
      - step: "initial_assessment"
        condition: "success"
        required: true
      # At least one processing step must complete
      - step: "high_quality_processing"
        condition: "completion"
        required: false
      - step: "low_quality_processing"
        condition: "completion"
        required: false
    timeout: 180
    max_retries: 1
    parallel_allowed: false

  # Conditional Final Step: Generate Detailed Report
  - id: "detailed_report"
    name: "Generate Detailed Report"
    description: "Generate detailed report for high-quality results"
    agent_id: "research_analyst"
    function: "generate_report"
    parameters:
      data: "${steps.synthesize_results.output}"
      format: "comprehensive"
      template: "detailed_analysis"
      include_visualizations: true
      include_recommendations: true
    depends_on:
      - "synthesize_results"
    conditions:
      # Generate detailed report only if original data quality was high
      expression: "steps.initial_assessment.output.quality_score >= global.quality_threshold"
    timeout: 150
    max_retries: 1
    parallel_allowed: false

  # Conditional Final Step: Generate Basic Report
  - id: "basic_report"
    name: "Generate Basic Report"
    description: "Generate basic report for low-quality results"
    agent_id: "task_executor"
    function: "execute_task"
    parameters:
      task_definition:
        action: "generate_basic_report"
        input: "${steps.synthesize_results.output}"
        format: "summary"
        include_caveats: true
    depends_on:
      - "synthesize_results"
    conditions:
      # Generate basic report only if original data quality was low
      expression: "steps.initial_assessment.output.quality_score < global.quality_threshold"
    timeout: 90
    max_retries: 1
    parallel_allowed: false

  # Final Cleanup - Always runs
  - id: "cleanup"
    name: "Cleanup and Finalization"
    description: "Clean up temporary files and finalize output"
    agent_id: "task_executor"
    function: "execute_task"
    parameters:
      task_definition:
        action: "cleanup"
        detailed_report: "${steps.detailed_report.output || null}"
        basic_report: "${steps.basic_report.output || null}"
        cleanup_temp_files: true
        archive_results: true
    depends_on:
      - step: "detailed_report"
        condition: "completion"
        required: false
      - step: "basic_report"
        condition: "completion"
        required: false
    timeout: 60
    max_retries: 1
    parallel_allowed: false
    continue_on_error: true
